// Code generated by goagen v1.3.1, DO NOT EDIT.
//
// API "Secure": Application Contexts
//
// Command:
// $ goagen
// --design=github.com/hryktrd/jwtTest/design
// --out=$(GOPATH)\src\github.com\hryktrd\jwtTest
// --version=v1.3.1

package app

import (
	"context"
	"github.com/goadesign/goa"
	"net/http"
)

// SecureJWTContext provides the jwt secure action context.
type SecureJWTContext struct {
	context.Context
	*goa.ResponseData
	*goa.RequestData
}

// NewSecureJWTContext parses the incoming request URL and body, performs validations and creates the
// context used by the jwt controller secure action.
func NewSecureJWTContext(ctx context.Context, r *http.Request, service *goa.Service) (*SecureJWTContext, error) {
	var err error
	resp := goa.ContextResponse(ctx)
	resp.Service = service
	req := goa.ContextRequest(ctx)
	req.Request = r
	rctx := SecureJWTContext{Context: ctx, ResponseData: resp, RequestData: req}
	return &rctx, err
}

// OK sends a HTTP response with status code 200.
func (ctx *SecureJWTContext) OK(r *GoaJWTTestSuccess) error {
	if ctx.ResponseData.Header().Get("Content-Type") == "" {
		ctx.ResponseData.Header().Set("Content-Type", "application/vnd.goa.jwt.test.success")
	}
	return ctx.ResponseData.Service.Send(ctx.Context, 200, r)
}

// Unauthorized sends a HTTP response with status code 401.
func (ctx *SecureJWTContext) Unauthorized() error {
	ctx.ResponseData.WriteHeader(401)
	return nil
}

// SigninJWTContext provides the jwt signin action context.
type SigninJWTContext struct {
	context.Context
	*goa.ResponseData
	*goa.RequestData
}

// NewSigninJWTContext parses the incoming request URL and body, performs validations and creates the
// context used by the jwt controller signin action.
func NewSigninJWTContext(ctx context.Context, r *http.Request, service *goa.Service) (*SigninJWTContext, error) {
	var err error
	resp := goa.ContextResponse(ctx)
	resp.Service = service
	req := goa.ContextRequest(ctx)
	req.Request = r
	rctx := SigninJWTContext{Context: ctx, ResponseData: resp, RequestData: req}
	return &rctx, err
}

// NoContent sends a HTTP response with status code 204.
func (ctx *SigninJWTContext) NoContent() error {
	ctx.ResponseData.WriteHeader(204)
	return nil
}

// Unauthorized sends a HTTP response with status code 401.
func (ctx *SigninJWTContext) Unauthorized() error {
	ctx.ResponseData.WriteHeader(401)
	return nil
}
